name: CI - Core (lint, build, data)

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  setup-cache-install:
    name: Install dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: setup-cache-install
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Run ESLint
        run: pnpm run lint

  unit:
    name: Unit tests (Vitest)
    runs-on: ubuntu-latest
    needs: setup-cache-install
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Run unit tests
        run: pnpm run test:unit

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: setup-cache-install
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Copy vendor assets
        run: node scripts/copy-vendor.mjs

      - name: Build
        run: pnpm run build
        env:
          VITE_MAP_STYLE_URL: /styles/blank.json

      - name: Enforce bundle size
        run: pnpm run size

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  validate-data:
    name: Validate data assets
    runs-on: ubuntu-latest
    needs: setup-cache-install
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Copy vendor assets
        run: node scripts/copy-vendor.mjs

      - name: Validate GeoJSON files
        run: |
          npx -y geojsonhint@3 "public/**/*.geojson"

      - name: Verify vendor assets present (no CDN)
        run: |
          test -f public/vendor/maplibre-gl.js
          test -f public/vendor/maplibre-gl.css
          test -f public/vendor/mapbox-gl-draw.js
          test -f public/vendor/mapbox-gl-draw.css
          # optional assets
          if [ -f public/vendor/maplibre-search-box.umd.js ]; then echo 'search-box js present'; fi
          if [ -f public/vendor/maplibre-search-box.css ]; then echo 'search-box css present'; fi


